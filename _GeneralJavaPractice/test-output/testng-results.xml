<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="42" ignored="0" total="161" passed="119">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="661" started-at="2019-07-30T02:15:30Z" finished-at="2019-07-30T02:15:31Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="661" started-at="2019-07-30T02:15:30Z" finished-at="2019-07-30T02:15:31Z">
      <class name="drink11.TestMain_MltThread">
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="16" started-at="2019-07-30T02:15:30Z" finished-at="2019-07-30T02:15:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="16" started-at="2019-07-30T02:15:30Z" finished-at="2019-07-30T02:15:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="16" started-at="2019-07-30T02:15:30Z" finished-at="2019-07-30T02:15:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="16" started-at="2019-07-30T02:15:30Z" finished-at="2019-07-30T02:15:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="16" started-at="2019-07-30T02:15:30Z" finished-at="2019-07-30T02:15:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="16" started-at="2019-07-30T02:15:30Z" finished-at="2019-07-30T02:15:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="16" started-at="2019-07-30T02:15:30Z" finished-at="2019-07-30T02:15:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="16" started-at="2019-07-30T02:15:30Z" finished-at="2019-07-30T02:15:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="16" started-at="2019-07-30T02:15:30Z" finished-at="2019-07-30T02:15:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="16" started-at="2019-07-30T02:15:30Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5 - BV Cabernet]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="16" started-at="2019-07-30T02:15:30Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5 - BV Cabernet]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="16" started-at="2019-07-30T02:15:30Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3 - BV Chardonnay]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="16" started-at="2019-07-30T02:15:30Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6 - Vueve Cliquot]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="16" started-at="2019-07-30T02:15:30Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2 - Sapporo Beer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="16" started-at="2019-07-30T02:15:30Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3 - BV Chardonnay]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="16" started-at="2019-07-30T02:15:30Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1 - Raineeer Beeer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="16" started-at="2019-07-30T02:15:30Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2 - Sapporo Beer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:30Z" finished-at="2019-07-30T02:15:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="16" started-at="2019-07-30T02:15:30Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1 - Raineeer Beeer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="16" started-at="2019-07-30T02:15:30Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6 - Vueve Cliquot]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="FAIL" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="82" started-at="2019-07-30T02:15:30Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1 - Raineeer Beeer]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at drink11.TestMain_MltThread.main(TestMain_MltThread.java:45)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:30Z" finished-at="2019-07-30T02:15:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:30Z" finished-at="2019-07-30T02:15:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="FAIL" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="52" started-at="2019-07-30T02:15:30Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3 - BV Chardonnay]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at drink11.TestMain_MltThread.main(TestMain_MltThread.java:45)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:30Z" finished-at="2019-07-30T02:15:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:30Z" finished-at="2019-07-30T02:15:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:30Z" finished-at="2019-07-30T02:15:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:30Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2 - Sapporo Beer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:30Z" finished-at="2019-07-30T02:15:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:30Z" finished-at="2019-07-30T02:15:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="FAIL" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="16" started-at="2019-07-30T02:15:30Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5 - BV Cabernet]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at drink11.TestMain_MltThread.main(TestMain_MltThread.java:45)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:30Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6 - Vueve Cliquot]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:30Z" finished-at="2019-07-30T02:15:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:30Z" finished-at="2019-07-30T02:15:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:30Z" finished-at="2019-07-30T02:15:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:30Z" finished-at="2019-07-30T02:15:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:30Z" finished-at="2019-07-30T02:15:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:30Z" finished-at="2019-07-30T02:15:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:30Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1 - Raineeer Beeer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:30Z" finished-at="2019-07-30T02:15:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:30Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2 - Sapporo Beer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:30Z" finished-at="2019-07-30T02:15:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:30Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1 - Raineeer Beeer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:30Z" finished-at="2019-07-30T02:15:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:30Z" finished-at="2019-07-30T02:15:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="FAIL" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="19" started-at="2019-07-30T02:15:30Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3 - BV Chardonnay]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at drink11.TestMain_MltThread.main(TestMain_MltThread.java:45)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:30Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6 - Vueve Cliquot]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:30Z" finished-at="2019-07-30T02:15:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:30Z" finished-at="2019-07-30T02:15:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:30Z" finished-at="2019-07-30T02:15:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:30Z" finished-at="2019-07-30T02:15:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="16" started-at="2019-07-30T02:15:30Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2 - Sapporo Beer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:30Z" finished-at="2019-07-30T02:15:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:30Z" finished-at="2019-07-30T02:15:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:30Z" finished-at="2019-07-30T02:15:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:30Z" finished-at="2019-07-30T02:15:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="16" started-at="2019-07-30T02:15:30Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:30Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5 - BV Cabernet]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="4" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5 - BV Cabernet]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="FAIL" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="83" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3 - BV Chardonnay]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at drink11.TestMain_MltThread.main(TestMain_MltThread.java:45)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2 - Sapporo Beer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="FAIL" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6 - Vueve Cliquot]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at drink11.TestMain_MltThread.main(TestMain_MltThread.java:45)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3 - BV Chardonnay]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1 - Raineeer Beeer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5 - BV Cabernet]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3 - BV Chardonnay]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="FAIL" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="188" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2 - Sapporo Beer]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at drink11.TestMain_MltThread.main(TestMain_MltThread.java:45)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="FAIL" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="172" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1 - Raineeer Beeer]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at drink11.TestMain_MltThread.main(TestMain_MltThread.java:45)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="FAIL" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6 - Vueve Cliquot]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at drink11.TestMain_MltThread.main(TestMain_MltThread.java:45)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6 - Vueve Cliquot]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5 - BV Cabernet]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="FAIL" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="78" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1 - Raineeer Beeer]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at drink11.TestMain_MltThread.main(TestMain_MltThread.java:45)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="15" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6 - Vueve Cliquot]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3 - BV Chardonnay]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2 - Sapporo Beer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="FAIL" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="62" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5 - BV Cabernet]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at drink11.TestMain_MltThread.main(TestMain_MltThread.java:45)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1 - Raineeer Beeer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2 - Sapporo Beer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="FAIL" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="31" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3 - BV Chardonnay]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at drink11.TestMain_MltThread.main(TestMain_MltThread.java:45)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5 - BV Cabernet]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6 - Vueve Cliquot]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="15" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1 - Raineeer Beeer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2 - Sapporo Beer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="16" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5 - BV Cabernet]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="141" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3 - BV Chardonnay]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2 - Sapporo Beer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="16" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6 - Vueve Cliquot]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="109" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1 - Raineeer Beeer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="FAIL" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="93" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3 - BV Chardonnay]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at drink11.TestMain_MltThread.main(TestMain_MltThread.java:45)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5 - BV Cabernet]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6 - Vueve Cliquot]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2 - Sapporo Beer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="16" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="16" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3 - BV Chardonnay]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5 - BV Cabernet]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3 - BV Chardonnay]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5 - BV Cabernet]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6 - Vueve Cliquot]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2 - Sapporo Beer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="FAIL" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="15" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1 - Raineeer Beeer]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at drink11.TestMain_MltThread.main(TestMain_MltThread.java:45)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1 - Raineeer Beeer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="16" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5 - BV Cabernet]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2 - Sapporo Beer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6 - Vueve Cliquot]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1 - Raineeer Beeer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="FAIL" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="47" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3 - BV Chardonnay]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at drink11.TestMain_MltThread.main(TestMain_MltThread.java:45)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="16" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6 - Vueve Cliquot]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1 - Raineeer Beeer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2 - Sapporo Beer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="15" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3 - BV Chardonnay]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2 - Sapporo Beer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="FAIL" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6 - Vueve Cliquot]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at drink11.TestMain_MltThread.main(TestMain_MltThread.java:45)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="FAIL" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="16" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6 - Vueve Cliquot]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at drink11.TestMain_MltThread.main(TestMain_MltThread.java:45)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5 - BV Cabernet]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="FAIL" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="16" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3 - BV Chardonnay]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at drink11.TestMain_MltThread.main(TestMain_MltThread.java:45)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1 - Raineeer Beeer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5 - BV Cabernet]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="FAIL" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="172" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2 - Sapporo Beer]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at drink11.TestMain_MltThread.main(TestMain_MltThread.java:45)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2 - Sapporo Beer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="FAIL" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="203" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1 - Raineeer Beeer]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at drink11.TestMain_MltThread.main(TestMain_MltThread.java:45)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="FAIL" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="203" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5 - BV Cabernet]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at drink11.TestMain_MltThread.main(TestMain_MltThread.java:45)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="FAIL" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="203" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3 - BV Chardonnay]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at drink11.TestMain_MltThread.main(TestMain_MltThread.java:45)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="FAIL" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="47" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3 - BV Chardonnay]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at drink11.TestMain_MltThread.main(TestMain_MltThread.java:45)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="FAIL" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="125" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1 - Raineeer Beeer]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at drink11.TestMain_MltThread.main(TestMain_MltThread.java:45)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="16" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5 - BV Cabernet]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6 - Vueve Cliquot]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="15" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1 - Raineeer Beeer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6 - Vueve Cliquot]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="15" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3 - BV Chardonnay]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1 - Raineeer Beeer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="FAIL" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2 - Sapporo Beer]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at drink11.TestMain_MltThread.main(TestMain_MltThread.java:45)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6 - Vueve Cliquot]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6 - Vueve Cliquot]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3 - BV Chardonnay]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2 - Sapporo Beer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="FAIL" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="188" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5 - BV Cabernet]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at drink11.TestMain_MltThread.main(TestMain_MltThread.java:45)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5 - BV Cabernet]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1 - Raineeer Beeer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="FAIL" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="172" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2 - Sapporo Beer]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at drink11.TestMain_MltThread.main(TestMain_MltThread.java:45)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="16" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5 - BV Cabernet]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3 - BV Chardonnay]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6 - Vueve Cliquot]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="16" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1 - Raineeer Beeer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6 - Vueve Cliquot]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5 - BV Cabernet]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2 - Sapporo Beer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3 - BV Chardonnay]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1 - Raineeer Beeer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2 - Sapporo Beer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5 - BV Cabernet]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3 - BV Chardonnay]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1 - Raineeer Beeer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6 - Vueve Cliquot]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="FAIL" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2 - Sapporo Beer]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at drink11.TestMain_MltThread.main(TestMain_MltThread.java:45)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1 - Raineeer Beeer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5 - BV Cabernet]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="31" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6 - Vueve Cliquot]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="15" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2 - Sapporo Beer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1 - Raineeer Beeer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6 - Vueve Cliquot]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3 - BV Chardonnay]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2 - Sapporo Beer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5 - BV Cabernet]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1 - Raineeer Beeer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6 - Vueve Cliquot]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3 - BV Chardonnay]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2 - Sapporo Beer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6 - Vueve Cliquot]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3 - BV Chardonnay]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5 - BV Cabernet]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5 - BV Cabernet]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="FAIL" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="47" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3 - BV Chardonnay]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at drink11.TestMain_MltThread.main(TestMain_MltThread.java:45)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="16" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1 - Raineeer Beeer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3 - BV Chardonnay]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2 - Sapporo Beer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="FAIL" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5 - BV Cabernet]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at drink11.TestMain_MltThread.main(TestMain_MltThread.java:45)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="FAIL" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2 - Sapporo Beer]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at drink11.TestMain_MltThread.main(TestMain_MltThread.java:45)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5 - BV Cabernet]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="16" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="FAIL" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="31" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3 - BV Chardonnay]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at drink11.TestMain_MltThread.main(TestMain_MltThread.java:45)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6 - Vueve Cliquot]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1 - Raineeer Beeer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="16" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3 - BV Chardonnay]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6 - Vueve Cliquot]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2 - Sapporo Beer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6 - Vueve Cliquot]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="FAIL" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2 - Sapporo Beer]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at drink11.TestMain_MltThread.main(TestMain_MltThread.java:45)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="FAIL" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="15" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1 - Raineeer Beeer]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at drink11.TestMain_MltThread.main(TestMain_MltThread.java:45)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3 - BV Chardonnay]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5 - BV Cabernet]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1 - Raineeer Beeer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="16" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="FAIL" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1 - Raineeer Beeer]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at drink11.TestMain_MltThread.main(TestMain_MltThread.java:45)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="FAIL" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="16" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6 - Vueve Cliquot]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at drink11.TestMain_MltThread.main(TestMain_MltThread.java:45)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="FAIL" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6 - Vueve Cliquot]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at drink11.TestMain_MltThread.main(TestMain_MltThread.java:45)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="FAIL" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3 - BV Chardonnay]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at drink11.TestMain_MltThread.main(TestMain_MltThread.java:45)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="FAIL" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BEER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2 - Sapporo Beer]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at drink11.TestMain_MltThread.main(TestMain_MltThread.java:45)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="FAIL" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="0" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5 - BV Cabernet]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at drink11.TestMain_MltThread.main(TestMain_MltThread.java:45)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="FAIL" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="16" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7 - Coors Lite]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at drink11.TestMain_MltThread.main(TestMain_MltThread.java:45)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="FAIL" signature="main(drink11.DrinkType, java.lang.String)[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="main" duration-ms="16" started-at="2019-07-30T02:15:31Z" data-provider="testDataProvider" finished-at="2019-07-30T02:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5 - BV Cabernet]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at drink11.TestMain_MltThread.main(TestMain_MltThread.java:45)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="afterEachTest()[pri:0, instance:drink11.TestMain_MltThread@56ac3a89]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2019-07-30T02:15:31Z" finished-at="2019-07-30T02:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
      </class> <!-- drink11.TestMain_MltThread -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
